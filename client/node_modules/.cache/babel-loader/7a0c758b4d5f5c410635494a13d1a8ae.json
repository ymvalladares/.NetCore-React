{"ast":null,"code":"export const Reducer = (state, action) => {\n  const valoresIniciales = state.users;\n\n  switch (action.type) {\n    case \"REMOVE_USER\":\n      console.log(state);\n      console.log(action);\n      return {\n        users: state.users.filter(user => {\n          return user.id !== action.payload;\n        })\n      };\n\n    case \"SEARCH_USER_INPUT\":\n      console.log(state);\n      console.log(action);\n      return {\n        users: state.users.filter(user => {\n          return user.email === action.payload;\n        })\n      };\n\n    case \"SEARCH_USER_SELECT\":\n      console.log(state);\n      console.log(action);\n\n      if (action.payload == 1) {\n        let user = state.users.sort((a, b) => {\n          return b.amountDonate - a.amountDonate;\n        });\n        return {\n          users: user\n        };\n      }\n\n      if (action.payload == 2) {\n        let user = state.users.sort((a, b) => {\n          return a.amountDonate - b.amountDonate;\n        });\n        return {\n          users: user\n        };\n      } else {\n        return {\n          users: state.users\n        };\n      }\n\n    case \"SEARCH_USER_SWITCH\":\n      console.log(state);\n      console.log(action);\n      const result1 = state.users.filter(user => user.amountDonate > action.payload[0] && user.amountDonate < action.payload[1]);\n      return {\n        users: result1\n      };\n\n    case \"SEARCH_USER_CHECK_MINOR\":\n      console.log(state);\n      console.log(action);\n\n      if (action.payload === true) {\n        let value = Math.min(...state.users.map(user => user.amountDonate));\n        return {\n          users: state.users.filter(user => {\n            return user.amountDonate === value;\n          })\n        };\n      }\n\n    case \"SEARCH_USER_CHECK_BETTER\":\n      console.log(state);\n      console.log(action);\n\n      if (action.payload === true) {\n        let value = Math.max(...state.users.map(user => user.amountDonate));\n        return {\n          users: state.users.filter(user => {\n            return user.amountDonate === value;\n          })\n        };\n      }\n\n    case \"ADD_USER\":\n      console.log(state);\n      console.log(action);\n      return {\n        users: [...state.users, action.payload]\n      };\n\n    case \"EDIT_USER\":\n      console.log(action);\n      const updateUser = action.payload;\n      const updateUsers = state.users.map(user => {\n        if (user.id === updateUser.id) {\n          return {\n            id: updateUser.id,\n            name: updateUser.name,\n            lastName: updateUser.lastName,\n            email: updateUser.email,\n            age: updateUser.age,\n            amountDonate: updateUser.amountDonate + user.amountDonate\n          };\n        }\n\n        return user;\n      });\n      return {\n        users: updateUsers\n      };\n\n    default:\n      return state;\n  }\n};\n_c = Reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"names":["Reducer","state","action","valoresIniciales","users","type","console","log","filter","user","id","payload","email","sort","a","b","amountDonate","result1","value","Math","min","map","max","updateUser","updateUsers","name","lastName","age"],"sources":["C:/Mybook/React/CrudReactApi/client/src/components/Context/Reducer.js"],"sourcesContent":["export const Reducer = (state, action) => {\r\n  const valoresIniciales = state.users;\r\n\r\n  switch (action.type) {\r\n    case \"REMOVE_USER\":\r\n      console.log(state);\r\n      console.log(action);\r\n      return {\r\n        users: state.users.filter((user) => {\r\n          return user.id !== action.payload;\r\n        }),\r\n      };\r\n    case \"SEARCH_USER_INPUT\":\r\n      console.log(state);\r\n      console.log(action);\r\n      return {\r\n        users: state.users.filter((user) => {\r\n          return user.email === action.payload;\r\n        }),\r\n      };\r\n\r\n    case \"SEARCH_USER_SELECT\":\r\n      console.log(state);\r\n      console.log(action);\r\n      if (action.payload == 1) {\r\n        let user = state.users.sort((a, b) => {\r\n          return b.amountDonate - a.amountDonate;\r\n        });\r\n        return {\r\n          users: user,\r\n        };\r\n      }\r\n      if (action.payload == 2) {\r\n        let user = state.users.sort((a, b) => {\r\n          return a.amountDonate - b.amountDonate;\r\n        });\r\n        return {\r\n          users: user,\r\n        };\r\n      } else {\r\n        return {\r\n          users: state.users,\r\n        };\r\n      }\r\n\r\n    case \"SEARCH_USER_SWITCH\":\r\n      console.log(state);\r\n      console.log(action);\r\n      const result1 = state.users.filter(\r\n        (user) =>\r\n          user.amountDonate > action.payload[0] &&\r\n          user.amountDonate < action.payload[1]\r\n      );\r\n\r\n      return {\r\n        users: result1,\r\n      };\r\n\r\n    case \"SEARCH_USER_CHECK_MINOR\":\r\n      console.log(state);\r\n      console.log(action);\r\n      if (action.payload === true) {\r\n        let value = Math.min(...state.users.map((user) => user.amountDonate));\r\n        return {\r\n          users: state.users.filter((user) => {\r\n            return user.amountDonate === value;\r\n          }),\r\n        };\r\n      }\r\n\r\n    case \"SEARCH_USER_CHECK_BETTER\":\r\n      console.log(state);\r\n      console.log(action);\r\n      if (action.payload === true) {\r\n        let value = Math.max(...state.users.map((user) => user.amountDonate));\r\n        return {\r\n          users: state.users.filter((user) => {\r\n            return user.amountDonate === value;\r\n          }),\r\n        };\r\n      }\r\n\r\n    case \"ADD_USER\":\r\n      console.log(state);\r\n      console.log(action);\r\n\r\n      return {\r\n        users: [...state.users, action.payload],\r\n      };\r\n\r\n    case \"EDIT_USER\":\r\n      console.log(action);\r\n      const updateUser = action.payload;\r\n\r\n      const updateUsers = state.users.map((user) => {\r\n        if (user.id === updateUser.id) {\r\n          return {\r\n            id: updateUser.id,\r\n            name: updateUser.name,\r\n            lastName: updateUser.lastName,\r\n            email: updateUser.email,\r\n            age: updateUser.age,\r\n            amountDonate: updateUser.amountDonate + user.amountDonate,\r\n          };\r\n        }\r\n        return user;\r\n      });\r\n      return {\r\n        users: updateUsers,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}