{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mybook\\\\React\\\\CrudReactApi\\\\client\\\\src\\\\components\\\\Context\\\\context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useState } from \"react\";\nimport { getUser } from \"../../actions/service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/React.createContext();\nconst url = \"https://localhost:44376/user/user\";\nconst userDefault = {\n  users: users\n};\n\nconst userReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updateTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingItemCar = state.items[existingCartItemIndex];\n    let updateItems;\n\n    if (existingItemCar) {\n      const updateItem = { ...existingItemCar,\n        amount: existingItemCar.amount + action.item.amount\n      };\n      updateItems = [...state.items];\n      updateItems[existingCartItemIndex] = updateItem;\n    } else {\n      updateItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updateItems,\n      totalAmount: updateTotalAmount\n    };\n  }\n};\n\nexport const Provider = props => {\n  _s();\n\n  const [users, setUser] = useState([]);\n  useEffect(() => {\n    getUser(url).then(response => setUser(response.data)).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  const [userState, dispatchUserAction] = useReducer(userReducer, userDefault);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: users,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Provider, \"jr+9aebQmXF0WeezvZsr1DS8+Gg=\");\n\n_c = Provider;\nexport const Consumer = Context.Consumer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["React","useEffect","useReducer","useState","getUser","Context","createContext","url","userDefault","users","userReducer","state","action","type","updateTotalAmount","totalAmount","item","price","amount","existingCartItemIndex","items","findIndex","id","existingItemCar","updateItems","updateItem","concat","Provider","props","setUser","then","response","data","catch","error","console","log","userState","dispatchUserAction","children","Consumer"],"sources":["C:/Mybook/React/CrudReactApi/client/src/components/Context/context.js"],"sourcesContent":["import React, { useEffect, useReducer, useState } from \"react\";\r\nimport { getUser } from \"../../actions/service\";\r\n\r\nconst Context = React.createContext();\r\nconst url = \"https://localhost:44376/user/user\";\r\n\r\nconst userDefault = {\r\n  users: users,\r\n};\r\n\r\nconst userReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updateTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n    const existingItemCar = state.items[existingCartItemIndex];\r\n    let updateItems;\r\n\r\n    if (existingItemCar) {\r\n      const updateItem = {\r\n        ...existingItemCar,\r\n        amount: existingItemCar.amount + action.item.amount,\r\n      };\r\n      updateItems = [...state.items];\r\n      updateItems[existingCartItemIndex] = updateItem;\r\n    } else {\r\n      updateItems = state.items.concat(action.item);\r\n    }\r\n\r\n    return {\r\n      items: updateItems,\r\n      totalAmount: updateTotalAmount,\r\n    };\r\n  }\r\n};\r\n\r\nexport const Provider = (props) => {\r\n  const [users, setUser] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getUser(url)\r\n      .then((response) => setUser(response.data))\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const [userState, dispatchUserAction] = useReducer(userReducer, userDefault);\r\n\r\n  return <Context.Provider value={users}>{props.children}</Context.Provider>;\r\n};\r\n\r\nexport const Consumer = Context.Consumer;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,OAAT,QAAwB,uBAAxB;;AAEA,MAAMC,OAAO,gBAAGL,KAAK,CAACM,aAAN,EAAhB;AACA,MAAMC,GAAG,GAAG,mCAAZ;AAEA,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAEA;AADW,CAApB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,IAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;IACzB,MAAMC,iBAAiB,GACrBH,KAAK,CAACI,WAAN,GAAoBH,MAAM,CAACI,IAAP,CAAYC,KAAZ,GAAoBL,MAAM,CAACI,IAAP,CAAYE,MADtD;IAGA,MAAMC,qBAAqB,GAAGR,KAAK,CAACS,KAAN,CAAYC,SAAZ,CAC3BL,IAAD,IAAUA,IAAI,CAACM,EAAL,KAAYV,MAAM,CAACI,IAAP,CAAYM,EADN,CAA9B;IAGA,MAAMC,eAAe,GAAGZ,KAAK,CAACS,KAAN,CAAYD,qBAAZ,CAAxB;IACA,IAAIK,WAAJ;;IAEA,IAAID,eAAJ,EAAqB;MACnB,MAAME,UAAU,GAAG,EACjB,GAAGF,eADc;QAEjBL,MAAM,EAAEK,eAAe,CAACL,MAAhB,GAAyBN,MAAM,CAACI,IAAP,CAAYE;MAF5B,CAAnB;MAIAM,WAAW,GAAG,CAAC,GAAGb,KAAK,CAACS,KAAV,CAAd;MACAI,WAAW,CAACL,qBAAD,CAAX,GAAqCM,UAArC;IACD,CAPD,MAOO;MACLD,WAAW,GAAGb,KAAK,CAACS,KAAN,CAAYM,MAAZ,CAAmBd,MAAM,CAACI,IAA1B,CAAd;IACD;;IAED,OAAO;MACLI,KAAK,EAAEI,WADF;MAELT,WAAW,EAAED;IAFR,CAAP;EAID;AACF,CA3BD;;AA6BA,OAAO,MAAMa,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EACjC,MAAM,CAACnB,KAAD,EAAQoB,OAAR,IAAmB1B,QAAQ,CAAC,EAAD,CAAjC;EAEAF,SAAS,CAAC,MAAM;IACdG,OAAO,CAACG,GAAD,CAAP,CACGuB,IADH,CACSC,QAAD,IAAcF,OAAO,CAACE,QAAQ,CAACC,IAAV,CAD7B,EAEGC,KAFH,CAEUC,KAAD,IAAW;MAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD,CAJH;EAKD,CANQ,EAMN,EANM,CAAT;EAQA,MAAM,CAACG,SAAD,EAAYC,kBAAZ,IAAkCpC,UAAU,CAACQ,WAAD,EAAcF,WAAd,CAAlD;EAEA,oBAAO,QAAC,OAAD,CAAS,QAAT;IAAkB,KAAK,EAAEC,KAAzB;IAAA,UAAiCmB,KAAK,CAACW;EAAvC;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAdM;;GAAMZ,Q;;KAAAA,Q;AAgBb,OAAO,MAAMa,QAAQ,GAAGnC,OAAO,CAACmC,QAAzB"},"metadata":{},"sourceType":"module"}